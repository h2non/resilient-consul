(function(e,r){if(typeof define==="function"&&define.amd){define(["exports"],r)}else if(typeof exports==="object"){r(exports);if(typeof module==="object"&&module!==null){module.exports=exports=exports.resilientConsul}}else{r(e)}})(this,function(e){var r=["service","servers"];var t=["service","datacenter","protocol","tag","mapServers","onlyHealthy"];e.resilientConsul=function(e){e=n(e||{});var r=e.mapServers||(e.onlyHealthy?s:c);var t=e.onlyHealthy?"/v1/health/service/":"/v1/catalog/service/";e.basePath=t+e.service;if(e.discoveryService){e.refreshPath=t+e.discoveryService;e.enableSelfRefresh=true}function o(t,n){i(e,t);return{"in":function o(e,t,n){if(e)return n();if(Array.isArray(t.data)){t.data=r(t.data)}n()},out:function a(r,t){r.params=r.params||{};if(e.datacenter){r.params.dc=e.datacenter}if(e.onlyHealthy){r.params.passing=true}if(e.tag){r.params.tag=e.tag}t()}}}o.type="discovery";return o;function a(e){return e&&e.Address}function s(r){return r.map(function t(r){return(e.protocol||"http")+"://"+r.Service.Address+":"+(+r.Service.Port||80)})}function c(r){return r.filter(a).map(function t(r){return(e.protocol||"http")+"://"+(r.ServiceAddress||r.Address)+":"+(+r.ServicePort||80)})}};function n(e){var t=r.filter(function(r){return!e[r]});if(t.length){throw new TypeError("Missing required params: "+t.join(", "))}return e}function i(e,r){Object.keys(e).filter(function(e){return!~t.indexOf(e)}).forEach(function(t){r.set(t,e[t])})}});
//# sourceMappingURL=http://cdn.rawgit.com/h2non/consul/0.1.5/consul.min.js.map